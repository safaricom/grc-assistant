@baseUrl = http://localhost:3001/api
@authToken = ""

###
# Health Check
# Checks the status of the API and its database connection.
GET {{baseUrl}}/health

###
# Authentication: Login with Credentials
# Note: This requires a user to exist in the database.
# The response token should be copied into the @authToken variable above.
POST {{baseUrl}}/auth/callback/credentials
Content-Type: application/json

{
  "email": "admin@example.com",
  "password": "password123"
}

###
# Get Current User Profile
# Requires a valid authToken.
GET {{baseUrl}}/profile
Authorization: Bearer {{authToken}}

###
# Get All Documents
# Requires a valid authToken.
GET {{baseUrl}}/documents
Authorization: Bearer {{authToken}}

###
# Upload a Document
# Requires a valid authToken.
# Note: Replace <PATH_TO_YOUR_FILE> with the actual file path on your machine.
POST {{baseUrl}}/documents
Authorization: Bearer {{authToken}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="test-document.pdf"
Content-Type: application/pdf

< /path/to/your/file.pdf
------WebKitFormBoundary7MA4YWxkTrZu0gW--


###
# View a Specific Document
# Requires a valid authToken. Replace {id} with a real document ID.
@documentId = 1
GET {{baseUrl}}/documents/{{documentId}}
Authorization: Bearer {{authToken}}

###
# Delete a Specific Document
# Requires a valid authToken. Replace {id} with a real document ID.
DELETE {{baseUrl}}/documents/{{documentId}}
Authorization: Bearer {{authToken}}


###
# (Admin) Get All Users
# Requires an admin user's authToken.
GET {{baseUrl}}/users
Authorization: Bearer {{authToken}}

###
# (Admin) Delete a User
# Requires an admin user's authToken. Replace {id} with a real user ID.
# Note: You cannot delete the currently authenticated user.
@userIdToDelete = "user-id-to-delete"
DELETE {{baseUrl}}/users/{{userIdToDelete}}
Authorization: Bearer {{authToken}}
