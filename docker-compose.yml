services:
  postgres:
    image: postgres:17
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    restart: always
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000" # API port
      - "9001:9001" # Console port
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      # Ensure container connects to other services by service name
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
      MINIO_ENDPOINT: minio
      MINIO_PORT: "9000"
      # Allow browser on host to access backend (frontend served on host at port 80)
      FRONTEND_URL: "http://localhost:80"
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - minio
    restart: always

  # One-off service to run migrations using the build 'builder' stage (has dev deps)
  migrate:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder
    env_file:
      - .env
    command: npx drizzle-kit migrate --config ./drizzle.config.cjs
    depends_on:
      - postgres
    restart: "no"

  # One-off service to run the compiled seed script using the runtime/runner image
  seed:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: runner
    env_file:
      - .env
    command: node dist/lib/db/seed.js
    depends_on:
      - postgres
    restart: "no"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        # Build frontend assets to call backend on host port 3001 (accessible from browser)
        VITE_API_HOST: "http://localhost:3001"
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: always

volumes:
  postgres_data:
  minio_data:
